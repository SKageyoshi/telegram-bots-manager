name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build and push Manager image
      uses: docker/build-push-action@v4
      with:
        context: ./bot-manager
        push: true
        tags: |
          telegrambots/manager:${{ steps.version.outputs.VERSION }}
          telegrambots/manager:latest
    
    - name: Build and push Monitor image
      uses: docker/build-push-action@v4
      with:
        context: ./bot-monitor
        push: true
        tags: |
          telegrambots/monitor:${{ steps.version.outputs.VERSION }}
          telegrambots/monitor:latest
    
    - name: Build and push Base Bot image
      uses: docker/build-push-action@v4
      with:
        context: ./bot-templates
        push: true
        tags: |
          telegrambots/base-bot:${{ steps.version.outputs.VERSION }}
          telegrambots/base-bot:latest
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## ðŸš€ Nova versÃ£o do Telegram Bots Manager
          
          ### ðŸ“¦ Imagens Docker
          - `telegrambots/manager:${{ steps.version.outputs.VERSION }}`
          - `telegrambots/monitor:${{ steps.version.outputs.VERSION }}`
          - `telegrambots/base-bot:${{ steps.version.outputs.VERSION }}`
          
          ### ðŸ“‹ InstalaÃ§Ã£o
          ```bash
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
          ```
          
          ### ðŸ“š DocumentaÃ§Ã£o
          - [Guia de InstalaÃ§Ã£o](https://github.com/${{ github.repository }}/blob/main/docs/INSTALLATION.md)
          - [Guia de Uso](https://github.com/${{ github.repository }}/blob/main/docs/USAGE.md)
        draft: false
        prerelease: false
