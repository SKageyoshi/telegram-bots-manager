version: '3.7'

services:
  traefik:
    image: traefik:v2.10
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.swarmmode=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencryptresolver.acme.tlschallenge=true
      - --certificatesresolvers.letsencryptresolver.acme.email=admin@yourdomain.com
      - --certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - telegram_bots_network
    deploy:
      placement:
        constraints:
          - node.role == manager

  telegram-bots-manager:
    image: telegrambots/manager:latest
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/telegram_bots
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - telegram_bots_sessions:/app/sessions
      - telegram_bots_logs:/app/logs
      - telegram_bots_scripts:/app/bot-scripts
      - telegram_bots_configs:/app/configs
      - telegram_bots_exports:/app/exports
    networks:
      - telegram_bots_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.telegram-bots-manager.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.telegram-bots-manager.entrypoints=websecure
        - traefik.http.routers.telegram-bots-manager.tls=true
        - traefik.http.routers.telegram-bots-manager.tls.certresolver=letsencryptresolver
        - traefik.http.services.telegram-bots-manager.loadbalancer.server.port=8000

  telegram-bots-monitor:
    image: telegrambots/monitor:latest
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/telegram_bots
    volumes:
      - telegram_bots_logs:/app/logs
    networks:
      - telegram_bots_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Serviços opcionais (se não existirem)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - telegram_bots_network
    deploy:
      replicas: 1

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: telegram_bots
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - telegram_bots_network
    deploy:
      replicas: 1

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    networks:
      - telegram_bots_network
    deploy:
      replicas: 1

volumes:
  letsencrypt:
  redis_data:
  postgres_data:
  minio_data:
  telegram_bots_sessions:
  telegram_bots_logs:
  telegram_bots_scripts:
  telegram_bots_configs:
  telegram_bots_exports:

networks:
  telegram_bots_network:
    driver: overlay
